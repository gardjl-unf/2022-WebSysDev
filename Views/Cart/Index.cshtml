@model CartIndexViewModel

@{
    Layout = "_Layout2";
}

<h2>Your cart</h2>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th class="text-center">Quantity</th>
            <th>Item</th>
            <th class="text-right">Price</th>
            <th class="text-right">Subtotal</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var line in Model.Cart.Lines)
        {
            <tr>
                <td class="text-center">@line.Quantity</td>
                <td class="text-left">@line.Product.Name</td>
                <td class="text-right">@line.Product.Price.ToString("c")</td>
                <td class="text-right">
                    @((line.Quantity * line.Product.Price).ToString("c"))
                </td>
                <td>
                    @if (line.Product.Category != "Car" || line.Product.Name.Substring(0, 4) == "Mode")
                    {
                        <form asp-action="RemoveFromCart" method="post">
                            <input type="hidden" name="ProductID" value="@line.Product.ProductID" />
                            <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                            <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                        </form>
                    }
                </td>
            </tr>
        }

        <!-- Need to compute 7% tax and the Shipping Fee

        For Shipping it could just be $10 on orders under and free otherwise
        Could check the price and if over $40K add a $2500 vehicle dest fee
        The abobe needs to be added into the FAQs
         -->

    </tbody>
    <tfoot>
        <tr>
            <td colspan="3" class="text-right">Subtotal:</td>
            <td class="text-right">
                    @Model.Cart.ComputeTotalValue().ToString("c")
            </td>
        </tr>
        <tr>
            <td colspan="3" class="text-right">Tax (7.00%):</td>
            <td class="text-right">
                @{
                    decimal Tax = Math.Round(0.07M * @Model.Cart.ComputeTotalValue(), 2);
                }
                $@Tax
            </td>
        </tr>
        <tr>
            <td colspan="3" class="text-right">Total:</td>
            <td class="text-right">
                @{
                    decimal Total = Math.Round(@Model.Cart.ComputeTotalValue() + Tax, 2);
                }
                $@Total
            </td>
        </tr>
    </tfoot>
</table>
<div class="text-center">
    <a class="btn btn-primary btn-danger" asp-action="DeleteAllCart" asp-controller="Cart"> <strong> Clear Cart </strong> </a>
     <a class="btn btn-primary" href="@Model.ReturnUrl">Continue shopping</a>
     <a class="btn btn-primary" asp-action="Checkout" asp-controller="Order"> Checkout </a>
</div>
